{"version":3,"file":"static/js/415.aa608971.chunk.js","mappings":"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","sources":["pages/Home.jsx","utils/http.js","utils/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { DataListApi, DataEditApi, DataSearchApi, DataDelApi } from 'utils/api';\nimport {\n  Table,\n  Button,\n  Form,\n  Input,\n  DatePicker,\n  Drawer,\n  Space,\n  message,\n} from 'antd';\nimport { PhoneOutlined, FormOutlined } from '@ant-design/icons';\nimport moment from 'moment';\nimport locale from 'antd/lib/date-picker/locale/zh_CN';\nimport 'moment/locale/zh-cn';\nmoment.locale('zh-cn');\n\nexport default function Home() {\n  const columns = [\n    {\n      title: '客户',\n      dataIndex: 'customer',\n    },\n    {\n      title: '电话号码',\n      dataIndex: 'phone',\n    },\n    {\n      title: '代理',\n      dataIndex: 'user',\n    },\n    {\n      title: '创建时间',\n      dataIndex: 'creatTime',\n    },\n    {\n      title: '操作',\n      render: (text) => (\n        <>\n          <Button\n            type=\"primary\"\n            onClick={() => edit(text)}\n            style={{ marginRight: '8px' }}\n          >\n            编辑\n          </Button>\n          <Button type=\"primary\" onClick={() => del(text)} danger>\n            删除\n          </Button>\n        </>\n      ),\n    },\n  ];\n\n  const [form] = Form.useForm();\n  const [editForm] = Form.useForm();\n  const [editTitle, setEditTitle] = useState('');\n  const [visible, setVisible] = useState(false);\n  const [isSearch, setIsSearch] = useState(false);\n  const [data, setData] = useState([]);\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    DataListApi().then((res) => {\n      setTotal(res.data.total);\n      let newArr = [];\n      res.data.data.forEach((item) => {\n        newArr.push({\n          key: item._id,\n          phone: item.phone,\n          customer: item.customer,\n          user: item.user.username,\n          creatTime: new Date(item.creatTime).toLocaleDateString(),\n        });\n      });\n      setData(newArr);\n    });\n  }, []);\n\n  const onChangePage = (page) => {\n    if (isSearch) {\n      const model = form.getFieldsValue(true);\n      model.page = page;\n      onFinish(model);\n    } else {\n      DataListApi({ page }).then((res) => {\n        setTotal(res.data.total);\n        let newArr = [];\n        res.data.data.forEach((item) => {\n          newArr.push({\n            key: item._id,\n            phone: item.phone,\n            customer: item.customer,\n            user: item.user.username,\n            creatTime: new Date(item.creatTime).toLocaleDateString(),\n          });\n        });\n        setData(newArr);\n      });\n    }\n    setCurrentPage(page);\n  };\n\n  const onFinish = (values) => {\n    setCurrentPage(1);\n    const model = {\n      phone: values['phone'] ? values['phone'] : '',\n      customer: values['customer'] ? values['customer'] : '',\n      creatTime: values['date'] ? values['date'].unix() : 0,\n      page: values['page'] ? values['page'] : 1,\n    };\n    DataSearchApi(model).then((res) => {\n      setTotal(res.data.total);\n      let newArr = [];\n      res.data.data.forEach((item) => {\n        newArr.push({\n          key: item._id,\n          phone: item.phone,\n          customer: item.customer,\n          user: item.user.username,\n          creatTime: new Date(item.creatTime).toLocaleDateString(),\n        });\n      });\n      setData(newArr);\n      setIsSearch(true);\n    });\n  };\n\n  const edit = (data) => {\n    if (data.key) {\n      editForm.setFieldsValue(data);\n      setEditTitle('修改信息');\n    } else {\n      setEditTitle('添加信息');\n    }\n    setVisible(true);\n  };\n\n  const onClose = () => {\n    editForm.resetFields();\n    setVisible(false);\n  };\n\n  const onSubmit = (values) => {\n    let model = {};\n    if (values.key) {\n      model = {\n        _id: values.key,\n        phone: values['phone'] ? values['phone'] : '',\n        customer: values['customer'] ? values['customer'] : '',\n      };\n    } else {\n      model = {\n        phone: values['phone'] ? values['phone'] : '',\n        customer: values['customer'] ? values['customer'] : '',\n      };\n    }\n\n    DataEditApi(model).then((res) => {\n      message.success(res.data.message);\n    });\n    editForm.resetFields();\n    setVisible(false);\n  };\n\n  const del = (text) => {\n    DataDelApi({ _id: text.key }).then((res) => {\n      let dataSource = [...data];\n      dataSource = dataSource.filter((item) => item.key !== text.key);\n      setData(dataSource);\n      setTotal((currentPage - 1) * 10 + dataSource.length);\n      message.success(res.data.message);\n    });\n  };\n\n  return (\n    <div>\n      <Form form={form} name=\"search\" layout=\"inline\" onFinish={onFinish}>\n        <Form.Item name=\"customer\">\n          <Input prefix={<FormOutlined />} placeholder=\"客户\" />\n        </Form.Item>\n        <Form.Item name=\"phone\">\n          <Input prefix={<PhoneOutlined />} placeholder=\"电话号码\" />\n        </Form.Item>\n        <Form.Item name=\"date\">\n          <DatePicker placeholder=\"选择时间\" locale={locale} />\n        </Form.Item>\n        <Form.Item shouldUpdate>\n          <Button type=\"primary\" htmlType=\"submit\">\n            搜索\n          </Button>\n        </Form.Item>\n        <Form.Item>\n          <p style={{ margin: '0 50px' }}>总数：{total} 条</p>\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" onClick={edit}>\n            添加信息\n          </Button>\n        </Form.Item>\n      </Form>\n      <Table\n        columns={columns}\n        dataSource={data}\n        pagination={{\n          current: currentPage,\n          total: total,\n          pageSize: 10,\n          showSizeChanger: false,\n          onChange: onChangePage,\n        }}\n      />\n      <Drawer\n        title={editTitle}\n        placement=\"right\"\n        closable={false}\n        onClose={onClose}\n        visible={visible}\n        extra={<Space></Space>}\n      >\n        <Form form={editForm} name=\"edit\" onFinish={onSubmit}>\n          <Form.Item name=\"customer\" label=\"客户\">\n            <Input></Input>\n          </Form.Item>\n          <Form.Item name=\"phone\" label=\"号码\">\n            <Input></Input>\n          </Form.Item>\n          <Form.Item name=\"key\">\n            <Input type=\"hidden\"></Input>\n          </Form.Item>\n          <Form.Item>\n            <Button type=\"primary\" htmlType=\"submit\">\n              提交\n            </Button>\n          </Form.Item>\n        </Form>\n      </Drawer>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { message } from 'antd';\n\nconst http = axios.create({\n  baseURL: process.env.REACT_APP_SERVER_PORT,\n});\n\nhttp.interceptors.request.use(\n  (config) => {\n    if (localStorage.token) {\n      config.headers.Authorization = 'Bearer ' + localStorage.token;\n    }\n    return config;\n  },\n  (err) => {\n    return Promise.reject(err);\n  }\n);\n\nhttp.interceptors.response.use(\n  (res) => {\n    return res;\n  },\n  (err) => {\n    if (err.response.status === 401) {\n      localStorage.removeItem('token');\n      if (window.location.hash.indexOf('register')) {\n        window.location.hash = '/login';\n      }\n    }\n    if (err.response.data) {\n      message.error(err.response.data);\n      return Promise.reject(err);\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default http;\n","import http from './http';\n\nexport const LoginApi = (model) => http.post('/login', model);\n\nexport const RegisterApi = (model) => http.post('/register', model);\n\nexport const DataListApi = (params) => http.get('/data', { params });\n\nexport const DataDelApi = (params) => http.delete('/data', { params });\n\nexport const DataEditApi = (model) => http.put('/data', model);\n\nexport const DataSearchApi = (model) => http.post('/data', model);\n"],"names":["Home","columns","title","dataIndex","render","text","type","onClick","edit","style","marginRight","del","danger","Form","form","editForm","useState","editTitle","setEditTitle","visible","setVisible","isSearch","setIsSearch","data","setData","currentPage","setCurrentPage","total","setTotal","useEffect","DataListApi","then","res","newArr","forEach","item","push","key","_id","phone","customer","user","username","creatTime","Date","toLocaleDateString","onFinish","values","model","unix","page","DataSearchApi","setFieldsValue","DataDelApi","dataSource","filter","length","message","name","layout","prefix","placeholder","locale","shouldUpdate","htmlType","margin","pagination","current","pageSize","showSizeChanger","onChange","getFieldsValue","placement","closable","onClose","resetFields","extra","DataEditApi","label","moment","http","axios","baseURL","process","interceptors","request","use","config","localStorage","token","headers","Authorization","err","Promise","reject","response","status","removeItem","window","location","hash","indexOf","LoginApi","RegisterApi","params"],"sourceRoot":""}